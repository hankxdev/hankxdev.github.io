<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hank&apos;s Personal Blog</title>
    <description>Full Stack Engineer,  Web Extension developer, Body Builder.</description>
    <link>https://momane.com/</link>
    <atom:link href="https://momane.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>2023-08-29</pubDate>
    <lastBuildDate>Tue, 29 Aug 2023 09:25:21 +0200</lastBuildDate>
    <generator>Jekyll v3.9.3</generator>
    
      <item>
        <title>Mendix: How to connect to built in hsql database from dbeaver</title>
        <description>&lt;p&gt;By default, Mendix project is using HSQL as the database.&lt;/p&gt;

&lt;p&gt;If you want to check the db tables and data, you can simply do this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start the project from Mendixo Studio Pro&lt;/li&gt;
  &lt;li&gt;in the console tab, you will find a sub tab &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;click it will open a menu, there is a item &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;start built-in database viewer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../img/image.png&quot; alt=&quot;Open databaseviewer&quot; width=&quot;550px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A database viewer will open, it has simple and basic UI, which you can check all the tables or you project. and do query, delete actions easily.&lt;/p&gt;

&lt;p&gt;And you can also run SQL in it.&lt;/p&gt;

&lt;p&gt;Well, this is nice. but it’s a bit too simple.&lt;/p&gt;

&lt;p&gt;Sometimes, especially for those who has more development experience and has own favorite data viewer like MySql workbench, or DBeaver, how to use them to view the Mendix project’s database.&lt;/p&gt;

&lt;p&gt;It’s also simple.&lt;/p&gt;

&lt;p&gt;Let’s take DBeaver as example.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;open the built-in db viewer in Mendix Studio Pro.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Connect&lt;/code&gt;, this will open a small window.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In this window, it shows the connect info of current project’s dababase, let’s call this window &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SP Window&lt;/code&gt; for referrence.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../img/image-2.png&quot; alt=&quot;db connection info&quot; width=&quot;550px&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Now open DBeaver&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click the new connection icon, in the popup window, type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HSQL&lt;/code&gt; to search, and pick &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HSQL Server&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../img/image-1.png&quot; alt=&quot;Dbeaver&quot; width=&quot;550px&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;next&lt;/code&gt;. in next window, select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;, copy the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdbc...&lt;/code&gt; value in the SP Window as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JDBC URL&lt;/code&gt; in DBeaver&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Username&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Password&lt;/code&gt; just use the same one in the SP Window&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../img/image-3.png&quot; alt=&quot;modal_button_close_page&quot; width=&quot;550px&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Finish&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You are done, now you can play with the Mendix project database with DBeaver&lt;/p&gt;

&lt;p&gt;—EOF—&lt;/p&gt;
</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/articles/2023-08/mendix-how-to-connect-built-in-database-hsql-from-dbeaver</link>
        <guid isPermaLink="true">https://momane.com/articles/2023-08/mendix-how-to-connect-built-in-database-hsql-from-dbeaver</guid>
        
        <category>Mendix</category>
        
        <category>LowCode</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Fixing the Close Action for a Modal popup in Mendix</title>
        <description>&lt;p&gt;Our tester engineer recently reported an issue where in a Mendix app,  it takes more than 3 seconds to close a popup after clicking the close button.&lt;/p&gt;

&lt;p&gt;We looked closely at the log and found that it always does some rollback and fetching before actually closing the modal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/rollback_in_log.png&quot; alt=&quot;rollback in log&quot; width=&quot;550px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We found that the default Close action for the modal is Cancel, which means cancel changes that are not committed in Mendix. This explains why it triggers rollback and retrieve before closing, even though no changes have been made.&lt;/p&gt;

&lt;p&gt;To fix this, you can change the Close action to &lt;em&gt;Close Page&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;However, there is no Close page in the list. There are some options that are bound to other buttons in the modal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/modal_close_actoins.png&quot; alt=&quot;modal_close_actoins&quot; width=&quot;550px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So you have to add a button in the modal, bind close page action to the button, and change the Close action of the model to the button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/modal_button_close_page.png&quot; alt=&quot;modal_button_close_page&quot; width=&quot;550px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sometimes you don’t need this extra button shown in the modal; you can just give it a hidden style, like adding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display:none&lt;/code&gt; style in its appearance tab.&lt;/p&gt;

&lt;p&gt;—EOF—&lt;/p&gt;
</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/articles/2023-08/mendix-improve-modal-popup-close-performance</link>
        <guid isPermaLink="true">https://momane.com/articles/2023-08/mendix-improve-modal-popup-close-performance</guid>
        
        <category>Mendix</category>
        
        <category>LowCode</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Mendix: How to call Microflow in Java Action and use its return value</title>
        <description>&lt;p&gt;After you dive into Mendix for a longer time, you would find yourself writing java code now and then. Don’t worry, good news is that you don’t need to write a lot of java code, Mendix is Low Code anyway.&lt;/p&gt;

&lt;p&gt;In Mendix, java code is been called Java Action.&lt;/p&gt;

&lt;p&gt;And you will also find you have to call Microflow in your java code. And in the latest version, approx Mendix 8.1, calling a Microflow can be in this way:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mendix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;microflowCall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;YourModule.SUB_ShowMessage&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inTransaction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hank&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Just another developer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will call your Microflow &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SUB_ShowMessage&lt;/code&gt; in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YourModule&lt;/code&gt; module, passing &lt;strong&gt;Name&lt;/strong&gt; and &lt;strong&gt;Message&lt;/strong&gt; to it.&lt;/p&gt;

&lt;p&gt;Sometimes if your Microflow has too many parameters, clearly chaining too many &lt;strong&gt;withParam&lt;/strong&gt; is not a proper way. You can use &lt;strong&gt;HashMap&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hank&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Just another developer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;note&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;This seems also a lot of code&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mendix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;microflowCall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;YourModule.SUB_ShowMessage&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inTransaction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can see there is no return value in the Microflow or you don’t want/need to use the return value of it.&lt;/p&gt;

&lt;p&gt;But what about you want to use it?&lt;/p&gt;

&lt;p&gt;If your Microflow returns a simple value, like &lt;em&gt;String&lt;/em&gt;, &lt;em&gt;Long/Integer&lt;/em&gt;, &lt;em&gt;Boolean&lt;/em&gt;, then it’s easy, just assign it to your Java variable:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mfValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mendix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;microflowCall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;YourModule.SUB_ShowMessageWithReturnValue&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inTransaction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hank&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Just another developer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// then you can use the mfValue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Well, this seems easy, what if the Microflow returns an object?&lt;/p&gt;

&lt;p&gt;When a Microflow returns an Object, it will lose its Entity definition and returns an interface  &lt;em&gt;*IMendixObject&lt;/em&gt;. You can not use it without init it with the corresponding Entity. Let’s say, it returns a &lt;em&gt;*System.User&lt;/em&gt; entity, then you will do this to use it:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// returns IMendixObject &lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;IMendixObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mendixObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mendix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;microflowCall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;YourModule.SUB_ShowMessageWithReturnValue&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inTransaction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hank&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Just another developer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// init with Entity&apos;s init function &lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mendixObj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;—EOF—&lt;/p&gt;
</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/articles/2022-10/mendix-how-to-call-microflow-in-javaaction-and-use-its-return-value-copy</link>
        <guid isPermaLink="true">https://momane.com/articles/2022-10/mendix-how-to-call-microflow-in-javaaction-and-use-its-return-value-copy</guid>
        
        <category>Mendix</category>
        
        <category>LowCode</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>JavaScript :How to detect if an element is visible</title>
        <description>&lt;p&gt;There are many ways to detect if an element is visible on page. like&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;none&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hidden&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And what if you want to detect if an elemtn is in current viewport?&lt;/p&gt;

&lt;p&gt;Easy, right? You just need to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getBoundingClientRect&lt;/code&gt;,  check if it’s top and bottom are all in viewport:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bottom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//it&apos;s in&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or, there is another way, with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IntersectionObserver&lt;/code&gt; [https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API]. It can observe a target element and you can do something while the target elment enters or leaves viewport.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;observer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IntersectionObserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isIntersecting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Element has just become visible in screen&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;threshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;observer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threshold&lt;/code&gt;, it is a number between 0 and 1, that represents the viewable area of the target element in the screen. For example, 0 represents no area of element is visible. A value of 0.10 represents about 10% area is viewable in screen. Value of 1 means element is fully viewable in screen.
You can even specify multiple thresholds.&lt;/p&gt;

&lt;p&gt;Now think about another scenario, what if an element is visible, but it’s parent is not visible? like:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;parent&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;disply: none&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;child&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display: block&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    I&apos;m not visible
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;document.querySelector(&apos;child&apos;).style.display === &apos;block&apos;&lt;/code&gt;, you will get a &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;How to fix this?&lt;/p&gt;

&lt;p&gt;Well we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;offsetParent&lt;/code&gt;. The HTMLElement.offsetParent read-only property returns a reference to the element which is the closest (nearest in the containment hierarchy) positioned ancestor element.&lt;/p&gt;

&lt;p&gt;so if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;elment.offsetParent === null&lt;/code&gt;, then we can tell that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;element&lt;/code&gt; is not visible.&lt;/p&gt;

</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/articles/2022-07/how-to-detect-if-an-element-is-visible</link>
        <guid isPermaLink="true">https://momane.com/articles/2022-07/how-to-detect-if-an-element-is-visible</guid>
        
        <category>JavaScript</category>
        
        <category>CSS</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Enable HTTPS on local, even with a customizable domain</title>
        <description>&lt;p&gt;Normally, when you’re debugging your web app on local, you can access it with either &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:PORT&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://127.0.0.1:POST&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; might be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8080&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3000&lt;/code&gt; or what’s ever.&lt;/p&gt;

&lt;p&gt;But sometimes you might need to access your local web app with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https&lt;/code&gt;, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://localhost:8080&lt;/code&gt;. So you search online
with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local https&lt;/code&gt;, tons of posts/tutorials teach you how to generate self-signed SSL certificate and assign to your localhost.&lt;/p&gt;

&lt;p&gt;As an app developer, you might feel it’s too complicated and don’t want to spend half an hour on it.&lt;/p&gt;

&lt;p&gt;So here I found the easiest way to achieve this with just one small tool and 1 line command, without changing anything in your actual app.&lt;/p&gt;

&lt;p&gt;This tool is (&lt;strong&gt;local-ssl-proxy&lt;/strong&gt;)[https://www.npmjs.com/package/local-ssl-proxy] , it is an open sourced npm package. so you can just install it by running&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; local-ssl-proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then you can just access your local web app with this command(let’s assume the app is running on 8080 port):&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;local-ssl-proxy -s 8081 -t 8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this way, your web app’s url will be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://localhost:8081&lt;/code&gt;. And you can still access your app from the original http url and port.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;-s&lt;/strong&gt; is the port that the app will be proxies to, the &lt;strong&gt;8080&lt;/strong&gt; is the actual port your app running on.&lt;/p&gt;

&lt;h3 id=&quot;whats-more&quot;&gt;what’s more?&lt;/h3&gt;

&lt;p&gt;If you don’t like to use the localhost, or you have to assign as domain to your local app. you can simply make it with 2 more steps.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;add a line in your computer’s &lt;strong&gt;hosts&lt;/strong&gt; file.
    &lt;ul&gt;
      &lt;li&gt;if you are on Windows, the hosts file’s path is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c:\windows\system32\drivers\etc\hosts&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;on Mac and Linux the path simply is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;you need Admin/root privilege to modify it&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;The line would be&lt;/p&gt;
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1 YOUR_DOMAIN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YOUR_DOMAIN&lt;/code&gt; can be anything, you don’t even register the domain, because it only works on your computer.&lt;/p&gt;

    &lt;p&gt;But don’t use some famous one like youtube.com or google.com, some browser would block it.&lt;/p&gt;

    &lt;p&gt;Let’s say we use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hank.momane&lt;/code&gt; in below example.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Then run the proxy like this:
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;local-ssl-proxy &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 443 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 8080 &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; hank.momane
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So by using the SSL port &lt;strong&gt;443&lt;/strong&gt; and an extra parameter &lt;strong&gt;-n&lt;/strong&gt;, now you can access your
app via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://hank.momane&lt;/code&gt;.&lt;/p&gt;

</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/2021-09-14-enable-https-and-domain-on-local</link>
        <guid isPermaLink="true">https://momane.com/2021-09-14-enable-https-and-domain-on-local</guid>
        
        <category>https</category>
        
        <category>web development</category>
        
        
        <category>programming</category>
        
        <category>tips</category>
        
      </item>
    
      <item>
        <title>Firefox offline installer official download page</title>
        <description>&lt;p&gt;Why do I need offline installer of Firefox?&lt;/p&gt;

&lt;p&gt;Because its online installer is too slow. (Yes the installer that you download from its index page is online 
installer, basically it’s just a downloader, that
when you run it, it just downloads the offline installer and install it for you. If you don’t feel it’s slow, 
then you don’t need to read this post.)
And maybe the online installer even uses P2P so when it will also upload to others while installing.&lt;/p&gt;

&lt;p&gt;So in this &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/all/#product-desktop-release&quot;&gt;Firefox offline installer download page&lt;/a&gt;, 
you can pick any version for any OS to download
the Firefox, like Firefox Developer Edition, Firefox Beta, for Mac, for Windows, fore Linux and even for Android mobile.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/firefox_offline_installer.png&quot; alt=&quot;img.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And, here is also &lt;a href=&quot;http://www.chromium.org/getting-involved/dev-channel&quot;&gt;Chrome release channels&lt;/a&gt;, where you can 
download several chrome versions, like Chrome Dev version, Beta, and Canary, for different OS.&lt;/p&gt;

&lt;p&gt;Like me, I like running different profile in different versions of Chrome and Firefox, because their icon are different 
,easier than check the profile name in the top right corner.&lt;/p&gt;

</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/2021-08-25-firefox-offline-download-official-page</link>
        <guid isPermaLink="true">https://momane.com/2021-08-25-firefox-offline-download-official-page</guid>
        
        <category>firefox</category>
        
        
        <category>browser</category>
        
      </item>
    
      <item>
        <title>Do not store file outside of WSL, it is slow</title>
        <description>&lt;p&gt;For some reason, I have switch back to Windows OS after years of working on MacOS.&lt;/p&gt;

&lt;p&gt;Most of the time I’m working on frontend projects, so to get better DX, I use Windows Subsystem for Linux (WSL for short). 
And I’m using version 2 of it.&lt;/p&gt;

&lt;p&gt;But I’m not a fancy Vim programmer, I heavily relay on IDEs like  VS Code and WebStorm. So I still have to install these IDEs
on the Windows.&lt;/p&gt;

&lt;p&gt;I’m able to install zsh, oh-my-zsh, fuck, p10k along with other tools in the WSL, gives me a similar experience as on Mac.&lt;/p&gt;

&lt;p&gt;At the first I put the project on Windows file system, because in this way I can easily access the file from IDE. 
And then in the WSL2 terminal, I go to the Windows path like this:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /mnt/DISK/PROJECT_FOLDER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I can run all these frontend commands like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvm&lt;/code&gt;. Seems smooth.&lt;/p&gt;

&lt;p&gt;Soon I find a big issue. The hot module replacement not working, the building process is very slow. I have to restart the project 
dev command after making change to the code. Clearly this is not an acceptable solution.&lt;/p&gt;

&lt;p&gt;After searching a bit on the internet, I move the project back to WSL file system, then every thing works perfectly. The building is faster,
the HMR is working.&lt;/p&gt;

&lt;p&gt;To access the file in WSL from IDEs, VS Code has &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl&quot;&gt;extension&lt;/a&gt; 
to open file from WSL easily, just install it, and in the terminal, just switch to the project folder and type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;code .&lt;/code&gt;. Or in the IDE, click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File-Open Folder&lt;/code&gt;, 
it will show your linux home folder by default. For WebStorm, it will also show the WSL folder in the open file dialog.&lt;/p&gt;

&lt;p&gt;Finally, I can use my i7+32G Windows, don’t need to listen to the crazy fan noise on the MBP :D&lt;/p&gt;

</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/do-not-store-file-outside-of-wsl-file-system-its-slow</link>
        <guid isPermaLink="true">https://momane.com/do-not-store-file-outside-of-wsl-file-system-its-slow</guid>
        
        <category>wsl</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>A wrong solution on Leetcode</title>
        <description>&lt;p&gt;With all these years as an engineer, I never tried Leetcode.&lt;/p&gt;

&lt;p&gt;Maybe it’s because I never prepared for interview before.&lt;/p&gt;

&lt;p&gt;Well, now I have to, because the company I just joined in 6 month ago, is gonna shutdown 
it’s office here.&lt;/p&gt;

&lt;p&gt;Technically not shutdown, it just lays off every programmer because it thinks we are more expensive than those in 
another country.&lt;/p&gt;

&lt;p&gt;So people all say you have to try Leetcode to practice your programming skill.&lt;/p&gt;

&lt;p&gt;As a frontend engineer, why should I try it? Most of the time, I’m building UI, calling API, fighting with webpack configuration, 
cursing Google Lighthouse always gives my webpage low score, 
arguing with designer why is same  font size seems so big on production than on Figma…&lt;/p&gt;

&lt;p&gt;After I tried to solve some problems on it, I found it is pretty fun, except it made me think myself not a qualified programmer.&lt;/p&gt;

&lt;p&gt;For the problem &lt;a href=&quot;https://leetcode.com/problems/palindrome-permutation/&quot;&gt;palindrome permutation&lt;/a&gt;. I found it’s top 1 solution is not correct.&lt;/p&gt;

&lt;p&gt;The code is like this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canPermutePalindrome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The code is very short and clean, pretty impressive at the first glance, and most of the cases it works,
Leetcode also thinks it’s a correct one.
But if you try with a string &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aaaabbbbcc&lt;/code&gt;, it returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;, while it should be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ababccbaba&lt;/code&gt; clearly is a palindrome.
Clearly the test cases could not cover all the scenes
Here is my solution, a simple and basic one:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canPermutePalindrome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Basically it uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Set&lt;/code&gt;&lt;/a&gt; to store the
unique chars in the string, it should be at last only 1 char with odd amount.&lt;/p&gt;

&lt;p&gt;It uses 100ms to execute. Not a very good one, but at least it works :D&lt;/p&gt;
</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/a-wrong-solution-on-leetcode</link>
        <guid isPermaLink="true">https://momane.com/a-wrong-solution-on-leetcode</guid>
        
        <category>git</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>how to skip git hooks when committing</title>
        <description>&lt;p&gt;Well,  it’s not very recommended skipping git hooks. These hooks are often for formatting code, running tests, etc.&lt;/p&gt;

&lt;p&gt;But life happens, sometimes you want to commit something quickly or even an empty commit to the server so that you can 
trigger some CI/CD, but you have to wait for 5 min for those tests running.&lt;/p&gt;

&lt;p&gt;So if you want to skip git hooks while commting, simply run command like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;span class=&quot;nt&quot;&gt;--no-verify&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR COMMIT MESSAGE&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or for short&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR COMMIT MESSAGE&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;BTW, the command to push an empty commit is&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit &lt;span class=&quot;nt&quot;&gt;--allow-empty&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR COMMIT MESSAGE&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Just remember only use these commands when you are really urgent and confident about your change.&lt;/p&gt;
</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/how-to-skip-git-hooks-when-committing</link>
        <guid isPermaLink="true">https://momane.com/how-to-skip-git-hooks-when-committing</guid>
        
        <category>git</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>How to fix: Enzyme expects an adapter to be configured</title>
        <description>&lt;p&gt;Working on updating a legacy React project. It’s still using React 8 and Node 7.9, I’d like to upgrate it
to the latest React and Node.&lt;/p&gt;

&lt;p&gt;The upgrading process was boring and straight forward, I just upgrade the dependencies and fix those broken changes in some
dependencies, luckily most of them do noe need any change.&lt;/p&gt;

&lt;h4 id=&quot;problem&quot;&gt;Problem&lt;/h4&gt;
&lt;p&gt;But when I run jest test, there is an error popup in almost every test file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Enzyme Internal Error: Enzyme expects an adapter to be configured, but found none. To
configure an adapter, you should call `Enzyme.configure({ adapter: new Adapter() })` 
before using any of Enzyme&apos;s top level APIs, where `Adapter` is the adapter 
corresponding to the library currently being tested. For example:

          import Adapter from &apos;enzyme-adapter-react-16&apos;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Searched a bit, it looks like after Enzyme 3.0 and React15, you have to configure the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Adapter&lt;/code&gt; to run the tests.&lt;/p&gt;

&lt;h4 id=&quot;solution&quot;&gt;Solution&lt;/h4&gt;
&lt;p&gt;To fix it is very simple, just put these lines on the top of your test file:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import { configure } from &apos;enzyme&apos;;
import Adapter from &apos;enzyme-adapter-react-15&apos;;

configure({ adapter: new Adapter() });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;While &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;enzyme-adapter-react-15&lt;/code&gt; is also needed, you will need to use correct version per your react version.&lt;/p&gt;

&lt;p&gt;But, what if your project is very large, it has like more than 30 test files, is it mean that you will need to 
put these line on top of every of your test file?&lt;/p&gt;

&lt;p&gt;Of course no, here is what you should do.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create a js file, name it as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jestConfig.js&lt;/code&gt; or any name you think is best. put it in any path in your 
project.&lt;/li&gt;
  &lt;li&gt;either create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jest.config.js&lt;/code&gt; in your project root or a block in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;put/append these content into it:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &quot;jest&quot;: {
    // ... other jest configrations
    &quot;setupFilesAfterEnv&quot;: [&quot;&amp;lt;rootDir&amp;gt;/path/to/your/jestConfig.js&quot;],
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice that some tutorial might suggest you to do this with old Enzyme version&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &quot;jest&quot;: {
    // ... other jest configrations
    &quot;setupTestFrameworkScriptFile&quot;: &quot;&amp;lt;rootDir&amp;gt;/path/to/your/jestConfig.js&quot;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In newer version the key has been changed from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setupTestFrameworkScriptFile&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setupFilesAfterEnv&lt;/code&gt;, and 
you can use multiple config file since it now uses array as value.&lt;/p&gt;

&lt;h4 id=&quot;what-about-react-17&quot;&gt;what about React 17&lt;/h4&gt;

&lt;p&gt;While the most recent official &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ezyme-adapter-react&lt;/code&gt; is for 16, the 17 is not surpported yet, so if you 
are using React 17, here is another unofficial package you can use &lt;a href=&quot;https://www.npmjs.com/package/@wojtekmaj/enzyme-adapter-react-17&quot;&gt;@wojtekmaj/enzyme-adapter-react-17&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It has more than 6k downloads every week now, seems reliable.&lt;/p&gt;

</description>
        <pubDate>2023-08-29</pubDate>
        <link>https://momane.com/how-ro-fix-enzyme-expects-an-adapter-to-be-configured</link>
        <guid isPermaLink="true">https://momane.com/how-ro-fix-enzyme-expects-an-adapter-to-be-configured</guid>
        
        <category>react</category>
        
        <category>jest</category>
        
        
        <category>programming</category>
        
        <category>front-end</category>
        
      </item>
    
  </channel>
</rss>
